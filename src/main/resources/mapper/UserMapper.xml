<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.casecollection.backend.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.casecollection.backend.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="contact_means" property="contactMeans" jdbcType="VARCHAR" />
    <result column="data_level" property="dataLevel" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="report_account" property="reportAccount" jdbcType="VARCHAR" />
    <result column="query_account" property="queryAccount" jdbcType="VARCHAR" />
    <result column="create_type" property="createType" jdbcType="INTEGER" />
    <result column="login_times" property="loginTimes" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, password, contact, contact_means, data_level, status, create_time, update_time, 
    create_by, update_by,report_account,query_account,create_type,login_times
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByIds" >
    delete from t_user
    where id IN
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.casecollection.backend.model.User" >
    insert into t_user (id, name, password, 
      contact, contact_means, data_level, 
      status, create_time, update_time, 
      create_by, update_by)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{contact,jdbcType=VARCHAR}, #{contactMeans,jdbcType=VARCHAR}, #{dataLevel,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.casecollection.backend.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="contactMeans != null" >
        contact_means,
      </if>
      <if test="dataLevel != null" >
        data_level,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="reportAccount != null" >
        report_account,
      </if>
      <if test="queryAccount != null" >
        query_account,
      </if>
      <if test="createType != null" >
        create_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactMeans != null" >
        #{contactMeans,jdbcType=VARCHAR},
      </if>
      <if test="dataLevel != null" >
        #{dataLevel,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="reportAccount != null" >
        #{reportAccount,jdbcType=VARCHAR},
      </if>
      <if test="queryAccount != null" >
        #{queryAccount,jdbcType=VARCHAR},
      </if>
      <if test="createType != null" >
        #{createType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.casecollection.backend.model.User" >
    update t_user
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactMeans != null" >
        contact_means = #{contactMeans,jdbcType=VARCHAR},
      </if>
      <if test="dataLevel != null" >
        data_level = #{dataLevel,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="loginTimes != null" >
        login_times = #{loginTimes,jdbcType=BIGINT},
      </if>
      <if test="createType != null" >
        create_type = #{createType,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.casecollection.backend.model.User" >
    update t_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      contact_means = #{contactMeans,jdbcType=VARCHAR},
      data_level = #{dataLevel,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findByName" resultMap="BaseResultMap" parameterType="com.casecollection.backend.model.vo.UserVo" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where name = #{name,jdbcType=BIGINT}
    <if test="id != null">
      and id != #{id,jdbcType=BIGINT}
    </if>
  </select>

  <select id="findUserCount" resultType="java.lang.Integer" parameterType="com.casecollection.backend.model.vo.UserVo" >
    select
    count(*)
    from t_user
    <include refid="findWhere" />
  </select>

  <select id="findUser" resultMap="BaseResultMap" parameterType="com.casecollection.backend.model.vo.UserVo" >
    select
    <include refid="Base_Column_List" />
    from t_user
    <include refid="findWhere" />
    order by id desc
  </select>

  <sql id="findWhere">
    where 1=1
    <if test="name != null and name !=''">
      and  name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    <if test="contact != null and contact !=''">
      and  contact like CONCAT('%',#{contact,jdbcType=VARCHAR},'%')
    </if>
    <if test="reportAccount != null and reportAccount !=''">
      and  report_account like CONCAT('%',#{reportAccount,jdbcType=VARCHAR},'%')
    </if>
    <if test="queryAccount != null and queryAccount !=''">
      and  query_account like CONCAT('%',#{queryAccount,jdbcType=VARCHAR},'%')
    </if>
  </sql>

  <select id="findByAccount" resultMap="BaseResultMap" parameterType="com.casecollection.backend.model.vo.UserVo" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where query_account = #{account,jdbcType=VARCHAR}
    or report_account = #{account,jdbcType=VARCHAR}
  </select>

</mapper>